import os
import datetime
import secrets

# 1. Generate new revision ID and create date
new_rev_id = secrets.token_hex(6) # Generates a 12-character hex string
create_timestamp = datetime.datetime.now(datetime.timezone.utc).strftime("%Y-%m-%d %H:%M:%S.%f")

# 2. Define the migration script content
migration_script_content = f"""\"\"\"add tip model

Revision ID: {new_rev_id}
Revises: 08e875156728
Create Date: {create_timestamp}

\"\"\"
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '{new_rev_id}'
down_revision = '08e875156728'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tip',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tipper_id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=255), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['tipper_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tip', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tip_recipient_id'), ['recipient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tip_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_tip_stripe_payment_intent_id'), ['stripe_payment_intent_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_tip_tipper_id'), ['tipper_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_tip_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tip', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tip_timestamp'))
        batch_op.drop_index(batch_op.f('ix_tip_tipper_id'))
        batch_op.drop_index(batch_op.f('ix_tip_stripe_payment_intent_id'))
        batch_op.drop_index(batch_op.f('ix_tip_status'))
        batch_op.drop_index(batch_op.f('ix_tip_recipient_id'))

    op.drop_table('tip')
    # ### end Alembic commands ###
"""

# 3. Create the new migration file
migrations_dir = "migrations/versions"
new_migration_filename = f"{new_rev_id}_add_tip_model.py"
new_migration_filepath = os.path.join(migrations_dir, new_migration_filename)

with open(new_migration_filepath, "w") as f:
    f.write(migration_script_content)

print(f"Created new migration file: {new_migration_filepath}")
