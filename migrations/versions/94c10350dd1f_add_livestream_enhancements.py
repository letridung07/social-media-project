"""Add livestream enhancements

Revision ID: 94c10350dd1f
Revises: 83e952279f55
Create Date: 2025-06-12 17:42:23.744303

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '94c10350dd1f'
down_revision = '83e952279f55'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Manually added table creation for live_streams
    op.create_table('live_streams',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(length=150), nullable=True),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('stream_key', sa.String(length=64), nullable=True),
        sa.Column('is_live', sa.Boolean(), nullable=False, server_default=sa.false()),
        sa.Column('created_at', sa.DateTime(), nullable=True), # Default handled by model
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_live_streams_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_live_streams_is_live'), ['is_live'], unique=False)
        batch_op.create_index(batch_op.f('ix_live_streams_stream_key'), ['stream_key'], unique=True)
    # End of manually added table creation

    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recording_filename', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('media_server_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('stream_conversation_id', sa.Integer(), nullable=True))
        # Add enable_recording with server_default and nullable=False for consistency
        batch_op.add_column(sa.Column('enable_recording', sa.Boolean(), nullable=False, server_default=sa.false()))

        # Explicitly name the foreign key constraint for better control
        batch_op.create_foreign_key(
            'fk_live_streams_stream_conversation_id_conversations',
            'conversations',
            ['stream_conversation_id'],
            ['id']
        )
        # Explicitly name the unique constraint
        batch_op.create_unique_constraint(
            'uq_live_streams_stream_conversation_id',
            ['stream_conversation_id']
        )

    # Update existing rows to set enable_recording to False if it's NULL
    # (which they would be if column was added as nullable initially without server_default)
    # Since we add it with server_default=sa.false() and nullable=False, this explicit update
    # might only be necessary if there was an intermediate state.
    # For safety and to ensure all existing rows are compliant:
    op.execute("UPDATE live_streams SET enable_recording = FALSE WHERE enable_recording IS NULL")

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.drop_constraint('uq_live_streams_stream_conversation_id', type_='unique') # Might need specific name if created by this script
        batch_op.drop_constraint('fk_live_streams_stream_conversation_id_conversations', type_='foreignkey') # Might need specific name
        batch_op.drop_column('enable_recording')
        batch_op.drop_column('stream_conversation_id')
        batch_op.drop_column('media_server_url')
        batch_op.drop_column('recording_filename')

    # Manually added table drop for live_streams
    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_live_streams_stream_key'))
        batch_op.drop_index(batch_op.f('ix_live_streams_is_live'))
        batch_op.drop_index(batch_op.f('ix_live_streams_user_id'))
    op.drop_table('live_streams')
    # ### end Alembic commands ###
