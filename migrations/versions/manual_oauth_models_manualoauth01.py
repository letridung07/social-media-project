"""Add Application and AccessToken models for OAuth

Revision ID: manualoauth01
Revises: e03445f75a10
Create Date: 2024-07-01 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'manualoauth01'
down_revision = 'e03445f75a10' # Points to the latest known migration
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_application',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('client_id', sa.String(length=64), nullable=False),
        sa.Column('client_secret', sa.String(length=256), nullable=False), # Matches model attribute
        sa.Column('redirect_uris', sa.Text(), nullable=False),
        sa.Column('owner_user_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.func.now(), onupdate=sa.func.now(), nullable=True),
        sa.ForeignKeyConstraint(['owner_user_id'], ['user.id'], name=op.f('fk_oauth_application_owner_user_id_user')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth_application'))
    )
    op.create_index(op.f('ix_oauth_application_client_id'), 'oauth_application', ['client_id'], unique=True)
    op.create_index(op.f('ix_oauth_application_owner_user_id'), 'oauth_application', ['owner_user_id'], unique=False)


    op.create_table('oauth_access_token',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('application_id', sa.Integer(), nullable=False),
        sa.Column('token', sa.String(length=255), nullable=False), # Matches model attribute
        sa.Column('refresh_token', sa.String(length=255), nullable=True), # Matches model attribute
        sa.Column('expires_at', sa.DateTime(), nullable=False),
        sa.Column('scopes', sa.Text(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.func.now(), nullable=True),
        sa.ForeignKeyConstraint(['application_id'], ['oauth_application.id'], name=op.f('fk_oauth_access_token_application_id_oauth_application')),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_oauth_access_token_user_id_user')),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_oauth_access_token'))
    )
    op.create_index(op.f('ix_oauth_access_token_application_id'), 'oauth_access_token', ['application_id'], unique=False)
    op.create_index(op.f('ix_oauth_access_token_refresh_token'), 'oauth_access_token', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_oauth_access_token_token'), 'oauth_access_token', ['token'], unique=True)
    op.create_index(op.f('ix_oauth_access_token_user_id'), 'oauth_access_token', ['user_id'], unique=False)
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_oauth_access_token_user_id'), table_name='oauth_access_token')
    op.drop_index(op.f('ix_oauth_access_token_token'), table_name='oauth_access_token')
    op.drop_index(op.f('ix_oauth_access_token_refresh_token'), table_name='oauth_access_token')
    op.drop_index(op.f('ix_oauth_access_token_application_id'), table_name='oauth_access_token')
    op.drop_table('oauth_access_token')

    op.drop_index(op.f('ix_oauth_application_owner_user_id'), table_name='oauth_application')
    op.drop_index(op.f('ix_oauth_application_client_id'), table_name='oauth_application')
    op.drop_table('oauth_application')
    # ### end Alembic commands ###
