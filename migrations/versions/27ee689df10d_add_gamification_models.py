"""Add gamification models

Revision ID: 27ee689df10d
Revises:
Create Date: 2025-06-18 01:06:27.083685

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '27ee689df10d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badge',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon_url', sa.String(length=255), nullable=True),
    sa.Column('criteria', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversations_last_updated'), ['last_updated'], unique=False)

    op.create_table('hashtag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag_text', sa.String(length=100), nullable=False),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('hashtag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_hashtag_tag_text'), ['tag_text'], unique=True)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=256), nullable=False),
    sa.Column('bio', sa.String(length=250), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=200), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('twitter_access_token', sa.String(length=255), nullable=True),
    sa.Column('facebook_access_token', sa.String(length=255), nullable=True),
    sa.Column('theme_preference', sa.String(length=50), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=255), nullable=True),
    sa.Column('profile_visibility', sa.String(length=50), nullable=False),
    sa.Column('default_post_privacy', sa.String(length=50), nullable=False),
    sa.Column('default_story_privacy', sa.String(length=50), nullable=False),
    sa.Column('otp_secret', sa.String(length=32), nullable=True),
    sa.Column('otp_enabled', sa.Boolean(), nullable=False),
    sa.Column('otp_backup_codes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_stripe_customer_id'), ['stripe_customer_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('virtual_good',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=10), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_log_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_activity_log_user_id'), ['user_id'], unique=False)

    op.create_table('article',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('slug', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('article', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_article_slug'), ['slug'], unique=True)
        batch_op.create_index(batch_op.f('ix_article_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_article_user_id'), ['user_id'], unique=False)

    op.create_table('audio_post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('audio_filename', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audio_post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audio_post_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_audio_post_user_id'), ['user_id'], unique=False)

    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_messages_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_sender_id'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_chat_messages_timestamp'), ['timestamp'], unique=False)

    op.create_table('conversation_participants',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'conversation_id')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('calendar_uid', sa.String(length=36), nullable=True),
    sa.Column('is_synced', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_datetime', sa.DateTime(), nullable=False),
    sa.Column('end_datetime', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organizer_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('calendar_uid')
    )
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.create_index('ix_event_calendar_uid', ['calendar_uid'], unique=True)

    op.create_table('followers',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id')
    )
    op.create_table('friend_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('image_file', sa.String(length=100), nullable=True),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_group_name'), ['name'], unique=True)

    op.create_table('historical_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('likes_received', sa.Integer(), nullable=True),
    sa.Column('comments_received', sa.Integer(), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('historical_analytics', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_historical_analytics_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_historical_analytics_user_id'), ['user_id'], unique=False)

    op.create_table('live_streams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=150), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('stream_key', sa.String(length=64), nullable=True),
    sa.Column('is_live', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('recording_filename', sa.String(length=255), nullable=True),
    sa.Column('media_server_url', sa.String(length=255), nullable=True),
    sa.Column('stream_conversation_id', sa.Integer(), nullable=True),
    sa.Column('enable_recording', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['stream_conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stream_conversation_id'),
    sa.UniqueConstraint('stream_key')
    )
    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_live_streams_is_live'), ['is_live'], unique=False)
        batch_op.create_index(batch_op.f('ix_live_streams_user_id'), ['user_id'], unique=False)

    op.create_table('oauth_application',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('client_id', sa.String(length=64), nullable=False),
    sa.Column('client_secret', sa.String(length=256), nullable=False),
    sa.Column('redirect_uris', sa.Text(), nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('oauth_application', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth_application_client_id'), ['client_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_oauth_application_owner_user_id'), ['owner_user_id'], unique=False)

    op.create_table('subscription_plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('duration', sa.String(length=50), nullable=False),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('stripe_product_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_price_id', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('subscription_plan', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_subscription_plan_creator_id'), ['creator_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscription_plan_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_subscription_plan_stripe_price_id'), ['stripe_price_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_subscription_plan_stripe_product_id'), ['stripe_product_id'], unique=False)

    op.create_table('user_analytics',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_likes_received', sa.Integer(), nullable=True),
    sa.Column('total_comments_received', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('user_badge',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badge.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'badge_id')
    )
    op.create_table('user_badge_earned',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['badge_id'], ['badge.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'badge_id')
    )
    op.create_table('user_points',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('user_virtual_good',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('virtual_good_id', sa.Integer(), nullable=False),
    sa.Column('purchase_date', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('is_equipped', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['virtual_good_id'], ['virtual_good.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'virtual_good_id', name='_user_virtual_good_uc')
    )
    with op.batch_alter_table('user_virtual_good', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_virtual_good_user_id'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_virtual_good_virtual_good_id'), ['virtual_good_id'], unique=False)

    op.create_table('event_attendees',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'event_id')
    )
    op.create_table('friend_list_members',
    sa.Column('friend_list_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['friend_list_id'], ['friend_list.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('friend_list_id', 'user_id')
    )
    op.create_table('group_membership',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'group_id', name='_user_group_uc')
    )
    op.create_table('message_read_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['chat_messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('message_id', 'user_id', name='_message_user_read_uc')
    )
    with op.batch_alter_table('message_read_status', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_message_read_status_message_id'), ['message_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_message_read_status_user_id'), ['user_id'], unique=False)

    op.create_table('oauth_access_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=255), nullable=False),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['application_id'], ['oauth_application.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('oauth_access_token', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_oauth_access_token_application_id'), ['application_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_oauth_access_token_refresh_token'), ['refresh_token'], unique=True)
        batch_op.create_index(batch_op.f('ix_oauth_access_token_token'), ['token'], unique=True)
        batch_op.create_index(batch_op.f('ix_oauth_access_token_user_id'), ['user_id'], unique=False)

    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('privacy_level', sa.String(length=50), nullable=False),
    sa.Column('custom_friend_list_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['custom_friend_list_id'], ['friend_list.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_post_is_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_scheduled_for'), ['scheduled_for'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_post_user_id'), ['user_id'], unique=False)

    op.create_table('story',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('image_filename', sa.String(length=100), nullable=True),
    sa.Column('video_filename', sa.String(length=100), nullable=True),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('privacy_level', sa.String(length=50), nullable=False),
    sa.Column('custom_friend_list_id', sa.Integer(), nullable=True),
    sa.Column('scheduled_for', sa.DateTime(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['custom_friend_list_id'], ['friend_list.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('story', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_story_expires_at'), ['expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_story_is_published'), ['is_published'], unique=False)
        batch_op.create_index(batch_op.f('ix_story_scheduled_for'), ['scheduled_for'], unique=False)
        batch_op.create_index(batch_op.f('ix_story_timestamp'), ['timestamp'], unique=False)

    op.create_table('user_subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('payment_details_id', sa.String(length=255), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['subscription_plan.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_subscription', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_subscription_plan_id'), ['plan_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_subscription_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_user_subscription_stripe_subscription_id'), ['stripe_subscription_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_subscription_subscriber_id'), ['subscriber_id'], unique=False)

    op.create_table('bookmark',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'post_id', name='_user_post_bookmark_uc')
    )
    with op.batch_alter_table('bookmark', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bookmark_timestamp'), ['timestamp'], unique=False)

    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comments_timestamp'), ['timestamp'], unique=False)

    op.create_table('media_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('media_type', sa.String(length=10), nullable=False),
    sa.Column('alt_text', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('media_item', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_media_item_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_media_item_timestamp'), ['timestamp'], unique=False)

    op.create_table('poll',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_poll_timestamp'), ['timestamp'], unique=False)

    op.create_table('post_hashtags',
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('hashtag_id', sa.Integer(), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['hashtag_id'], ['hashtag.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('post_id', 'hashtag_id')
    )
    op.create_table('reaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('reaction_type', sa.String(length=20), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'post_id', name='_user_post_reaction_uc')
    )
    with op.batch_alter_table('reaction', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_reaction_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_reaction_reaction_type'), ['reaction_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_reaction_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_reaction_user_id'), ['user_id'], unique=False)

    op.create_table('share',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('share', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_share_group_id'), ['group_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_share_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_share_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_share_user_id'), ['user_id'], unique=False)

    op.create_table('mention',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('mention', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_mention_actor_id'), ['actor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mention_comment_id'), ['comment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mention_post_id'), ['post_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_mention_timestamp'), ['timestamp'], unique=False)
        batch_op.create_index(batch_op.f('ix_mention_user_id'), ['user_id'], unique=False)

    op.create_table('poll_option',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('option_text', sa.String(length=255), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['poll_id'], ['poll.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('related_post_id', sa.Integer(), nullable=True),
    sa.Column('related_conversation_id', sa.Integer(), nullable=True),
    sa.Column('related_mention_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('related_group_id', sa.Integer(), nullable=True),
    sa.Column('related_event_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['related_conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['related_event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['related_group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['related_mention_id'], ['mention.id'], ),
    sa.ForeignKeyConstraint(['related_post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notifications_actor_id'), ['actor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_recipient_id'), ['recipient_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notifications_timestamp'), ['timestamp'], unique=False)

    op.create_table('poll_vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('option_id', sa.Integer(), nullable=False),
    sa.Column('poll_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['option_id'], ['poll_option.id'], ),
    sa.ForeignKeyConstraint(['poll_id'], ['poll.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'poll_id', name='_user_poll_uc')
    )
    with op.batch_alter_table('poll_vote', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_poll_vote_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('poll_vote', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_poll_vote_timestamp'))

    op.drop_table('poll_vote')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notifications_timestamp'))
        batch_op.drop_index(batch_op.f('ix_notifications_recipient_id'))
        batch_op.drop_index(batch_op.f('ix_notifications_actor_id'))

    op.drop_table('notifications')
    op.drop_table('poll_option')
    with op.batch_alter_table('mention', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_mention_user_id'))
        batch_op.drop_index(batch_op.f('ix_mention_timestamp'))
        batch_op.drop_index(batch_op.f('ix_mention_post_id'))
        batch_op.drop_index(batch_op.f('ix_mention_comment_id'))
        batch_op.drop_index(batch_op.f('ix_mention_actor_id'))

    op.drop_table('mention')
    with op.batch_alter_table('share', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_share_user_id'))
        batch_op.drop_index(batch_op.f('ix_share_timestamp'))
        batch_op.drop_index(batch_op.f('ix_share_post_id'))
        batch_op.drop_index(batch_op.f('ix_share_group_id'))

    op.drop_table('share')
    with op.batch_alter_table('reaction', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_reaction_user_id'))
        batch_op.drop_index(batch_op.f('ix_reaction_timestamp'))
        batch_op.drop_index(batch_op.f('ix_reaction_reaction_type'))
        batch_op.drop_index(batch_op.f('ix_reaction_post_id'))

    op.drop_table('reaction')
    op.drop_table('post_hashtags')
    with op.batch_alter_table('poll', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_poll_timestamp'))

    op.drop_table('poll')
    with op.batch_alter_table('media_item', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_media_item_timestamp'))
        batch_op.drop_index(batch_op.f('ix_media_item_post_id'))

    op.drop_table('media_item')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comments_timestamp'))

    op.drop_table('comments')
    with op.batch_alter_table('bookmark', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bookmark_timestamp'))

    op.drop_table('bookmark')
    with op.batch_alter_table('user_subscription', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_subscription_subscriber_id'))
        batch_op.drop_index(batch_op.f('ix_user_subscription_stripe_subscription_id'))
        batch_op.drop_index(batch_op.f('ix_user_subscription_status'))
        batch_op.drop_index(batch_op.f('ix_user_subscription_plan_id'))

    op.drop_table('user_subscription')
    with op.batch_alter_table('story', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_story_timestamp'))
        batch_op.drop_index(batch_op.f('ix_story_scheduled_for'))
        batch_op.drop_index(batch_op.f('ix_story_is_published'))
        batch_op.drop_index(batch_op.f('ix_story_expires_at'))

    op.drop_table('story')
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_post_user_id'))
        batch_op.drop_index(batch_op.f('ix_post_timestamp'))
        batch_op.drop_index(batch_op.f('ix_post_scheduled_for'))
        batch_op.drop_index(batch_op.f('ix_post_is_published'))

    op.drop_table('post')
    with op.batch_alter_table('oauth_access_token', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth_access_token_user_id'))
        batch_op.drop_index(batch_op.f('ix_oauth_access_token_token'))
        batch_op.drop_index(batch_op.f('ix_oauth_access_token_refresh_token'))
        batch_op.drop_index(batch_op.f('ix_oauth_access_token_application_id'))

    op.drop_table('oauth_access_token')
    with op.batch_alter_table('message_read_status', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_message_read_status_user_id'))
        batch_op.drop_index(batch_op.f('ix_message_read_status_message_id'))

    op.drop_table('message_read_status')
    op.drop_table('group_membership')
    op.drop_table('friend_list_members')
    op.drop_table('event_attendees')
    with op.batch_alter_table('user_virtual_good', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_virtual_good_virtual_good_id'))
        batch_op.drop_index(batch_op.f('ix_user_virtual_good_user_id'))

    op.drop_table('user_virtual_good')
    op.drop_table('user_points')
    op.drop_table('user_badge_earned')
    op.drop_table('user_badge')
    op.drop_table('user_analytics')
    with op.batch_alter_table('subscription_plan', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_subscription_plan_stripe_product_id'))
        batch_op.drop_index(batch_op.f('ix_subscription_plan_stripe_price_id'))
        batch_op.drop_index(batch_op.f('ix_subscription_plan_is_active'))
        batch_op.drop_index(batch_op.f('ix_subscription_plan_creator_id'))

    op.drop_table('subscription_plan')
    with op.batch_alter_table('oauth_application', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_oauth_application_owner_user_id'))
        batch_op.drop_index(batch_op.f('ix_oauth_application_client_id'))

    op.drop_table('oauth_application')
    with op.batch_alter_table('live_streams', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_live_streams_user_id'))
        batch_op.drop_index(batch_op.f('ix_live_streams_is_live'))

    op.drop_table('live_streams')
    with op.batch_alter_table('historical_analytics', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_historical_analytics_user_id'))
        batch_op.drop_index(batch_op.f('ix_historical_analytics_timestamp'))

    op.drop_table('historical_analytics')
    with op.batch_alter_table('group', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_group_name'))

    op.drop_table('group')
    op.drop_table('friend_list')
    op.drop_table('followers')
    with op.batch_alter_table('event', schema=None) as batch_op:
        batch_op.drop_index('ix_event_calendar_uid')

    op.drop_table('event')
    op.drop_table('conversation_participants')
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_timestamp'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_sender_id'))
        batch_op.drop_index(batch_op.f('ix_chat_messages_conversation_id'))

    op.drop_table('chat_messages')
    with op.batch_alter_table('audio_post', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audio_post_user_id'))
        batch_op.drop_index(batch_op.f('ix_audio_post_timestamp'))

    op.drop_table('audio_post')
    with op.batch_alter_table('article', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_article_user_id'))
        batch_op.drop_index(batch_op.f('ix_article_timestamp'))
        batch_op.drop_index(batch_op.f('ix_article_slug'))

    op.drop_table('article')
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_log_user_id'))
        batch_op.drop_index(batch_op.f('ix_activity_log_timestamp'))

    op.drop_table('activity_log')
    op.drop_table('virtual_good')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_stripe_customer_id'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    with op.batch_alter_table('hashtag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_hashtag_tag_text'))

    op.drop_table('hashtag')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversations_last_updated'))

    op.drop_table('conversations')
    op.drop_table('badge')
    # ### end Alembic commands ###
